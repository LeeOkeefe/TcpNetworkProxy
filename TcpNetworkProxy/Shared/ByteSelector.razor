@using System.ComponentModel

<div class="hex-string">
    @foreach (var hexByte in _hexBytes)
    {
        <span class="hex-byte @(hexByte.IsSelected ? "highlighted" : string.Empty)"
              @onclick="() => SelectBytes(hexByte)">
            @hexByte.Value
        </span>
    }
</div>

@code {

    [Parameter] public DataTypeViewModel DataType { get; set; }
    [Parameter] public string HexString { get; set; }

    private List<HexByteViewModel> _hexBytes;
    private int _selectedHexIndexStart;
    
    protected override void OnInitialized()
    {
        _hexBytes = HexString.Split(" ").Select((h, i) => 
            new HexByteViewModel { Index = i, Value = h, IsSelected = false }).ToList();
    }
    
    protected override void OnParametersSet()
    {
        SelectBytes(_hexBytes[_selectedHexIndexStart]);
    }

    private void SelectBytes(HexByteViewModel hexByteViewModel)
    {
        ResetSelection();

        if (DataType == null)
        {
            return;
        }
        
        _selectedHexIndexStart = hexByteViewModel.Index;
        var hexIndexRange = hexByteViewModel.Index + DataType.SizeInBytes;
        if (hexIndexRange > _hexBytes.Count)
        {
            return;
        }
        
        for (var i = hexByteViewModel.Index; i < hexIndexRange; i++)
        {
            _hexBytes[i].IsSelected = true;
        }
    }

    private void ResetSelection()
    {
        _selectedHexIndexStart = 0;

        foreach (var hex in _hexBytes.Where(hex => hex.IsSelected))
        {
            hex.IsSelected = false;
        }
    }
}