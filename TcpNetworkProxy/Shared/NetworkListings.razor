@using TcpNetworkProxy.Data

<MudTable Items="@NetworkEntries.Reverse()" OnRowClick="@OnNetworkEntryClicked" RowClassFunc="@SelectedRowClassFunc"
          @ref="_mudTable" RowClass="cursor-pointer" Height="650px" Virtualize Hover Dense>
    <ColGroup>
        <col style="max-width: 300px"/>
        <col style="max-width: 300px"/>
        <col style="max-width: 300px"/>
        <col style="min-width: 300px"/>
    </ColGroup>
    <HeaderContent>
        <MudTh>Timestamp</MudTh>
        <MudTh>Source</MudTh>
        <MudTh>Destination</MudTh>
        <MudTh>Data</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Timestamp">@context.Timestamp.ToLongTimeString()</MudTd>
        <MudTd DataLabel="Source">@context.Source</MudTd>
        <MudTd DataLabel="Destination">@context.Destination</MudTd>
        <MudTd DataLabel="Data">@context.Data</MudTd>
    </RowTemplate>
</MudTable>

@code {
    [Parameter]
    public IReadOnlyCollection<NetworkEntryViewModel> NetworkEntries { get; set; }

    [Parameter]
    public EventCallback<TableRowClickEventArgs<NetworkEntryViewModel>> OnNetworkEntryClicked { get; set; }

    private MudTable<NetworkEntryViewModel> _mudTable;
    private int _selectedRowNumber = -1;

    private string SelectedRowClassFunc(NetworkEntryViewModel element, int rowNumber)
    {
        if (_selectedRowNumber == rowNumber)
        {
            _selectedRowNumber = -1;
            return string.Empty;
        }

        if (_mudTable.SelectedItem == null || !_mudTable.SelectedItem.Equals(element))
        {
            return string.Empty;
        }

        _selectedRowNumber = rowNumber;
        return "selected";
    }

}